<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="G10">
   <short-name>識別名及び役割を取得し、利用者が設定可能なプロパティを直接設定可能にし、変化を通知するためにユーザエージェントが動作する、プラットフォームのアクセシビリティ API 機能をサポートするウェブコンテンツ技術を用いて、コンポーネントを作成す</short-name>
   <applicability>
      <p>アクセシビリティAPIと連動するようにプログラムされた標準のコンポーネントがあるプログラミング技術</p>
   </applicability>
   <applies-to>
      <success-criterion idref="ensure-compat-rsv" relationship="sufficient"/>
   </applies-to>
   <description>
    <p>この達成方法の目的は、支援技術がウェブコンテンツを理解し、代替の利用者ーインタフェースを介して、利用者に等価の情報を伝えられるようにすることである。</p>
    <p>コンテンツのなかには、マークアップ言語ではなく、プログラミング言語又はツールを用いて制作されているものがある。これらのウェブコンテンツ技術には、多くの場合、あらかじめプログラムされたインターフェースコンポーネントがあって、アクセシビリティAPIとのインタフェースとなる。コンテンツ制作者がこれらのコンポーネントを使ってプロパティ（識別名など）を埋めると、その結果として生成されるコンテンツの利用者ーインタフェースコンポーネントは、支援技術にとってアクセシブルなものとなる。</p>
    <p>しかし、コンテンツ制作者が新しい利用者ーインタフェースコンポーネントを作成したいと考え、標準のコンポーネントを使うことができない場合は、自分でアクセシビリティ機能を確実に追加し、アクセシビリティAPIと互換性があるように実装する必要がある。</p>
    <p>そういったカスタムコンポーネントでは、完成後、アクセシビリティ・サポーテッドの検証を行うべきである。</p>
  </description>
   <examples/>
   <related-techniques>
      <relatedtech idref="H91"/>
   </related-techniques>
   <tests>
      <procedure>
      <olist>
        <item>
          <p>アクセシブルな利用者ーエージェントを用いてコンテンツを描画する。</p>
        </item>
        <item>
          <p>利用者ーエージェントのアクセシビリティAPIをチェックするアクセシビリティツールを用いて、各利用者ーインタフェースコンポーネントを検証する。</p>
        </item>
        <item>
          <p>各利用者ーインターフェースコンポーネントに対する識別名（name）及び役割（role）が、ツールによって確認できる。</p>
        </item>
        <item>
          <p>コンポーネントの値を変更する。</p>
        </item>
        <item>
          <p>アクセシビリティツールにその変更が通知される。</p>
        </item>
        <item>
          <p>コンポーネントが支援技術で動作する。</p>
        </item>
      </olist>
    </procedure>
      <expected-results>
         <ulist>
            <item>
               <p>各利用者ーインタフェースコンポーネントにおいて、3, 5, 及び 6 を満たしている。</p>
            </item>
         </ulist>
      </expected-results>
   </tests>
</technique>
